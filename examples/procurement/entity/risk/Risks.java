package procurement.entity.risk;
// Generated Apr 14, 2018 1:58:23 PM by Hibernate Tools 5.2.8.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Risks generated by hbm2java
 */
@Entity
@Table(name = "risks", catalog = "risk_manager_update")
public class Risks implements java.io.Serializable {

	private Integer			id;
	private Projects		projects;
	private RiskTypes		riskTypes;
	private String			code;
	private String			name;
	private String			description;
	private Integer			financialImpact;
	private String			riskLevel;
	private Date			createdAt;
	private int				deleted;
	private Integer			probability;
	private Set<Methods>	methodses	= new HashSet<Methods>(0);

	public Risks() {
	}

	public Risks(Projects projects, RiskTypes riskTypes, int deleted) {
		this.projects = projects;
		this.riskTypes = riskTypes;
		this.deleted = deleted;
	}

	public Risks(Projects projects, RiskTypes riskTypes, String code, String name, String description,
			Integer financialImpact, String riskLevel, Date createdAt, int deleted, Integer probability,
			Set<Methods> methodses) {
		this.projects = projects;
		this.riskTypes = riskTypes;
		this.code = code;
		this.name = name;
		this.description = description;
		this.financialImpact = financialImpact;
		this.riskLevel = riskLevel;
		this.createdAt = createdAt;
		this.deleted = deleted;
		this.probability = probability;
		this.methodses = methodses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "project_id", nullable = false)
	public Projects getProjects() {
		return this.projects;
	}

	public void setProjects(Projects projects) {
		this.projects = projects;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "risk_type_id", nullable = false)
	public RiskTypes getRiskTypes() {
		return this.riskTypes;
	}

	public void setRiskTypes(RiskTypes riskTypes) {
		this.riskTypes = riskTypes;
	}

	@Column(name = "code", length = 20)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "name", length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "financial_impact")
	public Integer getFinancialImpact() {
		return this.financialImpact;
	}

	public void setFinancialImpact(Integer financialImpact) {
		this.financialImpact = financialImpact;
	}

	@Column(name = "risk_level", length = 20)
	public String getRiskLevel() {
		return this.riskLevel;
	}

	public void setRiskLevel(String riskLevel) {
		this.riskLevel = riskLevel;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdAt", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "deleted", nullable = false)
	public int getDeleted() {
		return this.deleted;
	}

	public void setDeleted(int deleted) {
		this.deleted = deleted;
	}

	@Column(name = "probability")
	public Integer getProbability() {
		return this.probability;
	}

	public void setProbability(Integer probability) {
		this.probability = probability;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "risks")
	public Set<Methods> getMethodses() {
		return this.methodses;
	}

	public void setMethodses(Set<Methods> methodses) {
		this.methodses = methodses;
	}

}
